find_program(CC arm-none-eabi-gcc)
find_program(CXX arm-none-eabi-g++)
find_program(ASM arm-none-eabi-gcc)
find_program(OBJCOPY arm-none-eabi-objcopy)
find_program(SIZE_TOOL arm-none-eabi-size)
find_program(OBJDUMP arm-none-eabi-objdump)

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)
set(CMAKE_C_COMPILER ${CC})
set(CMAKE_CXX_COMPILER ${CXX})
set(CMAKE_ASM_COMPILER ${ASM})

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "")
set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "")
set(CMAKE_SHARED_LIBRARY_LINK_ASM_FLAGS "")
set(CMAKE_EXE_LINKER_FLAGS "--specs=nosys.specs" CACHE INTERNAL "")

set(ARM_NONE_EABI TRUE)

if(DEFINED ENV{ARM_NONE_EABI_FIND_ROOT_PATH})
	set(CMAKE_FIND_ROOT_PATH $ENV{ARM_NONE_EABI_FIND_ROOT_PATH})
else()
	if(EXISTS "/opt/local/arm-none-eabi")
		set(CMAKE_FIND_ROOT_PATH "/opt/local/arm")
	elseif(EXISTS "/usr/arm-none-eabi")
		set(CMAKE_FIND_ROOT_PATH "/usr/arm-none-eabi")
	elseif(EXISTS "/usr/lib/arm-none-eabi")
		set(CMAKE_FIND_ROOT_PATH "/usr/lib/arm-none-eabi")
	else()
		message(FATAL_ERROR "Please set ARM_NONE_EABI_FIND_ROOT_PATH in your environment.")
	endif()
endif()
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
# not added automatically, since CMAKE_SYSTEM_NAME is "generic"
set(CMAKE_SYSTEM_INCLUDE_PATH "${CMAKE_FIND_ROOT_PATH}/include")
set(CMAKE_SYSTEM_LIBRARY_PATH "${CMAKE_FIND_ROOT_PATH}/lib")

message(STATUS "Set CMAKE_FIND_ROOT_PATH to ${CMAKE_FIND_ROOT_PATH}")
message(STATUS "Set CMAKE_SYSTEM_INCLUDE_PATH to ${CMAKE_SYSTEM_INCLUDE_PATH}")
message(STATUS "Set CMAKE_SYSTEM_LIBRARY_PATH to ${CMAKE_SYSTEM_LIBRARY_PATH}")
